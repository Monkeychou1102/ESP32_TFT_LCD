C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.obj
COMPILER INVOKED BY: C:\Keil_c51\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJE
                    -CT(LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          #include <font\font.h>
   4          #include <sys\sys.h>
   5          #include <lcd\lcd.h>
*** WARNING C323 IN LINE 33 OF port.h: newline expected, extra characters found
   6          /******************************************************
   7          接线方式
   8          VCC=3.3V
   9          GND=GND
  10          P22=RES
  11          P23=DC
  12          P24=CS1
  13          P25=CLK
  14          P26=MOSI
  15          
  16          如果不用触摸下面三个脚可以不接
  17          P31=MISO
  18          P33=CS2
  19          P34=PEN
  20          
  21          
  22          ******************************************************/
  23          
  24          u16 BACK_COLOR, POINT_COLOR;   //背景色，画笔色
  25          unsigned char bdata bitdata;
  26          sbit bit7=bitdata^7;
  27          sbit bit6=bitdata^6;
  28          sbit bit5=bitdata^5;
  29          sbit bit4=bitdata^4;
  30          sbit bit3=bitdata^3;
  31          sbit bit2=bitdata^2;
  32          sbit bit1=bitdata^1;
  33          sbit bit0=bitdata^0;
  34          void LCD_Writ_Bus(char da)   //串行数据写入
  35          { 
  36   1        bitdata=da;
  37   1        LCD_SDI=bit7;LCD_SCK=0;LCD_SCK=1;
  38   1        LCD_SDI=bit6;LCD_SCK=0;LCD_SCK=1;
  39   1        LCD_SDI=bit5;LCD_SCK=0;LCD_SCK=1;
  40   1        LCD_SDI=bit4;LCD_SCK=0;LCD_SCK=1;
  41   1        LCD_SDI=bit3;LCD_SCK=0;LCD_SCK=1;
  42   1        LCD_SDI=bit2;LCD_SCK=0;LCD_SCK=1;
  43   1        LCD_SDI=bit1;LCD_SCK=0;LCD_SCK=1;
  44   1        LCD_SDI=bit0;LCD_SCK=0;LCD_SCK=1; 
  45   1      } 
  46          void LCD_WR_DATA8(char da) //发送数据-8位参数
  47          {
  48   1          LCD_DC=1;
  49   1        LCD_Writ_Bus(da);  
  50   1      }  
  51           void LCD_WR_DATA(int da)
  52          {
  53   1          LCD_DC=1;
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 2   

  54   1        LCD_Writ_Bus(da>>8);
  55   1          LCD_Writ_Bus(da);
  56   1      }   
  57          void LCD_WR_REG(char da)   
  58          { 
  59   1          LCD_DC=0;
  60   1        LCD_Writ_Bus(da);
  61   1      }
  62           void LCD_WR_REG_DATA(int reg,int da)
  63          {
  64   1          LCD_WR_REG(reg);
  65   1        LCD_WR_DATA(da);
  66   1      }
  67          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
  68          { 
  69   1        LCD_WR_REG(0x2a);
  70   1         LCD_WR_DATA8(x1>>8);
  71   1         LCD_WR_DATA8(x1);
  72   1         LCD_WR_DATA8(x2>>8);
  73   1         LCD_WR_DATA8(x2);
  74   1        
  75   1         LCD_WR_REG(0x2b);
  76   1         LCD_WR_DATA8(y1>>8);
  77   1         LCD_WR_DATA8(y1);
  78   1         LCD_WR_DATA8(y2>>8);
  79   1         LCD_WR_DATA8(y2);
  80   1      
  81   1         LCD_WR_REG(0x2C);                       
  82   1      }
  83          void Lcd_Init(void)
  84          {
  85   1      
  86   1      //调用一次这些函数，免得编译的时候提示警告
  87   1          LCD_CS =1;
  88   1        if(LCD_CS==0)
  89   1        {
  90   2           LCD_WR_REG_DATA(0,0);
  91   2           LCD_ShowString(0,0," ");
  92   2           LCD_ShowNum(0,0,0,0);
  93   2           LCD_Show2Num(0,0,0,0);
  94   2           LCD_DrawPoint_big(0,0);
  95   2           LCD_DrawRectangle(0,0,0,0);
  96   2           Draw_Circle(0,0,0);
  97   2         }
  98   1        LCD_REST=0;
  99   1        delayms(20);
 100   1        LCD_REST=1;
 101   1        delayms(20);
 102   1        LCD_CS =0;  //打开片选使能
 103   1      
 104   1      //************* Start Initial Sequence **********// 
 105   1      LCD_WR_REG(0xCF);  
 106   1      LCD_WR_DATA8(0x00); 
 107   1      LCD_WR_DATA8(0xD9); 
 108   1      LCD_WR_DATA8(0X30); 
 109   1       
 110   1      LCD_WR_REG(0xED);  
 111   1      LCD_WR_DATA8(0x64); 
 112   1      LCD_WR_DATA8(0x03); 
 113   1      LCD_WR_DATA8(0X12); 
 114   1      LCD_WR_DATA8(0X81); 
 115   1       
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 3   

 116   1      LCD_WR_REG(0xE8);  
 117   1      LCD_WR_DATA8(0x85); 
 118   1      LCD_WR_DATA8(0x10); 
 119   1      LCD_WR_DATA8(0x78); 
 120   1       
 121   1      LCD_WR_REG(0xCB);  
 122   1      LCD_WR_DATA8(0x39); 
 123   1      LCD_WR_DATA8(0x2C); 
 124   1      LCD_WR_DATA8(0x00); 
 125   1      LCD_WR_DATA8(0x34); 
 126   1      LCD_WR_DATA8(0x02); 
 127   1       
 128   1      LCD_WR_REG(0xF7);  
 129   1      LCD_WR_DATA8(0x20); 
 130   1       
 131   1      LCD_WR_REG(0xEA);  
 132   1      LCD_WR_DATA8(0x00); 
 133   1      LCD_WR_DATA8(0x00); 
 134   1       
 135   1      LCD_WR_REG(0xC0);    //Power control 
 136   1      LCD_WR_DATA8(0x21);   //VRH[5:0] 
 137   1       
 138   1      LCD_WR_REG(0xC1);    //Power control 
 139   1      LCD_WR_DATA8(0x12);   //SAP[2:0];BT[3:0] 
 140   1       
 141   1      LCD_WR_REG(0xC5);    //VCM control 
 142   1      LCD_WR_DATA8(0x32); 
 143   1      LCD_WR_DATA8(0x3C); 
 144   1       
 145   1      LCD_WR_REG(0xC7);    //VCM control2 
 146   1      LCD_WR_DATA8(0XC1); 
 147   1       
 148   1      LCD_WR_REG(0x36);    // Memory Access Control 
 149   1      LCD_WR_DATA8(0x08); 
 150   1       
 151   1      LCD_WR_REG(0x3A);   
 152   1      LCD_WR_DATA8(0x55); 
 153   1      
 154   1      LCD_WR_REG(0xB1);   
 155   1      LCD_WR_DATA8(0x00);   
 156   1      LCD_WR_DATA8(0x18); 
 157   1       
 158   1      LCD_WR_REG(0xB6);    // Display Function Control 
 159   1      LCD_WR_DATA8(0x0A); 
 160   1      LCD_WR_DATA8(0xA2); 
 161   1      
 162   1       
 163   1       
 164   1      LCD_WR_REG(0xF2);    // 3Gamma Function Disable 
 165   1      LCD_WR_DATA8(0x00); 
 166   1       
 167   1      LCD_WR_REG(0x26);    //Gamma curve selected 
 168   1      LCD_WR_DATA8(0x01); 
 169   1       
 170   1      LCD_WR_REG(0xE0);    //Set Gamma 
 171   1      LCD_WR_DATA8(0x0F); 
 172   1      LCD_WR_DATA8(0x20); 
 173   1      LCD_WR_DATA8(0x1E); 
 174   1      LCD_WR_DATA8(0x09); 
 175   1      LCD_WR_DATA8(0x12); 
 176   1      LCD_WR_DATA8(0x0B); 
 177   1      LCD_WR_DATA8(0x50); 
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 4   

 178   1      LCD_WR_DATA8(0XBA); 
 179   1      LCD_WR_DATA8(0x44); 
 180   1      LCD_WR_DATA8(0x09); 
 181   1      LCD_WR_DATA8(0x14); 
 182   1      LCD_WR_DATA8(0x05); 
 183   1      LCD_WR_DATA8(0x23); 
 184   1      LCD_WR_DATA8(0x21); 
 185   1      LCD_WR_DATA8(0x00); 
 186   1       
 187   1      LCD_WR_REG(0XE1);    //Set Gamma 
 188   1      LCD_WR_DATA8(0x00); 
 189   1      LCD_WR_DATA8(0x19); 
 190   1      LCD_WR_DATA8(0x19); 
 191   1      LCD_WR_DATA8(0x00); 
 192   1      LCD_WR_DATA8(0x12); 
 193   1      LCD_WR_DATA8(0x07); 
 194   1      LCD_WR_DATA8(0x2D); 
 195   1      LCD_WR_DATA8(0x28); 
 196   1      LCD_WR_DATA8(0x3F); 
 197   1      LCD_WR_DATA8(0x02); 
 198   1      LCD_WR_DATA8(0x0A); 
 199   1      LCD_WR_DATA8(0x08); 
 200   1      LCD_WR_DATA8(0x25); 
 201   1      LCD_WR_DATA8(0x2D); 
 202   1      LCD_WR_DATA8(0x0F); 
 203   1       
 204   1      LCD_WR_REG(0x11);    //Exit Sleep 
 205   1      delayms(120); 
 206   1      LCD_WR_REG(0x29);    //Display on 
 207   1       
 208   1      } 
 209          //清屏函数
 210          //Color:要清屏的填充色
 211          void LCD_Clear(u16 Color)
 212          {
 213   1        u16 i,j;    
 214   1        Address_set(0,0,LCD_W-1,LCD_H-1);
 215   1          for(i=0;i<LCD_W;i++)
 216   1         {
 217   2          for (j=0;j<LCD_H;j++)
 218   2            {
 219   3                LCD_WR_DATA(Color);        
 220   3            }
 221   2      
 222   2          }
 223   1      }
 224          //在指定位置显示一个汉字(32*33大小)
 225          //dcolor为内容颜色，gbcolor为背静颜色
 226          void showhanzi(unsigned int x,unsigned int y,unsigned char index) 
 227          {  
 228   1        unsigned char i,j;
 229   1        unsigned char *temp=hanzi;    
 230   1          Address_set(x,y,x+31,y+31); //设置区域      
 231   1        temp+=index*128;  
 232   1        for(j=0;j<128;j++)
 233   1        {
 234   2          for(i=0;i<8;i++)
 235   2          {          
 236   3            if((*temp&(1<<i))!=0)
 237   3            {
 238   4              LCD_WR_DATA(POINT_COLOR);
 239   4            } 
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 5   

 240   3            else
 241   3            {
 242   4              LCD_WR_DATA(BACK_COLOR);
 243   4            }   
 244   3          }
 245   2          temp++;
 246   2         }
 247   1      }
 248          //画点
 249          //POINT_COLOR:此点的颜色
 250          void LCD_DrawPoint(u16 x,u16 y)
 251          {
 252   1        Address_set(x,y,x,y);//设置光标位置 
 253   1        LCD_WR_DATA(POINT_COLOR);       
 254   1      }    
 255          //画一个大点
 256          //POINT_COLOR:此点的颜色
 257          void LCD_DrawPoint_big(u16 x,u16 y)
 258          {
 259   1        LCD_Fill(x-1,y-1,x+1,y+1,POINT_COLOR);
 260   1      } 
 261          //在指定区域内填充指定颜色
 262          //区域大小:
 263          //  (xend-xsta)*(yend-ysta)
 264          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
 265          {          
 266   1        u16 i,j; 
 267   1        Address_set(xsta,ysta,xend,yend);      //设置光标位置 
 268   1        for(i=ysta;i<=yend;i++)
 269   1        {                               
 270   2          for(j=xsta;j<=xend;j++)LCD_WR_DATA(color);//设置光标位置      
 271   2        }                   
 272   1      }  
 273          //画线
 274          //x1,y1:起点坐标
 275          //x2,y2:终点坐标  
 276          void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 277          {
 278   1        u16 t; 
 279   1        int xerr=0,yerr=0,delta_x,delta_y,distance; 
 280   1        int incx,incy,uRow,uCol; 
 281   1      
 282   1        delta_x=x2-x1; //计算坐标增量 
 283   1        delta_y=y2-y1; 
 284   1        uRow=x1; 
 285   1        uCol=y1; 
 286   1        if(delta_x>0)incx=1; //设置单步方向 
 287   1        else if(delta_x==0)incx=0;//垂直线 
 288   1        else {incx=-1;delta_x=-delta_x;} 
 289   1        if(delta_y>0)incy=1; 
 290   1        else if(delta_y==0)incy=0;//水平线 
 291   1        else{incy=-1;delta_y=-delta_y;} 
 292   1        if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
 293   1        else distance=delta_y; 
 294   1        for(t=0;t<=distance+1;t++ )//画线输出 
 295   1        {  
 296   2          LCD_DrawPoint(uRow,uCol);//画点 
 297   2          xerr+=delta_x ; 
 298   2          yerr+=delta_y ; 
 299   2          if(xerr>distance) 
 300   2          { 
 301   3            xerr-=distance; 
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 6   

 302   3            uRow+=incx; 
 303   3          } 
 304   2          if(yerr>distance) 
 305   2          { 
 306   3            yerr-=distance; 
 307   3            uCol+=incy; 
 308   3          } 
 309   2        }  
 310   1      }    
 311          //画矩形
 312          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 313          {
 314   1        LCD_DrawLine(x1,y1,x2,y1);
 315   1        LCD_DrawLine(x1,y1,x1,y2);
 316   1        LCD_DrawLine(x1,y2,x2,y2);
 317   1        LCD_DrawLine(x2,y1,x2,y2);
 318   1      }
 319          //在指定位置画一个指定大小的圆
 320          //(x,y):中心点
 321          //r    :半径
 322          void Draw_Circle(u16 x0,u16 y0,u8 r)
 323          {
 324   1        int a,b;
 325   1        int di;
 326   1        a=0;b=r;    
 327   1        di=3-(r<<1);             //判断下个点位置的标志
 328   1        while(a<=b)
 329   1        {
 330   2          LCD_DrawPoint(x0-b,y0-a);             //3           
 331   2          LCD_DrawPoint(x0+b,y0-a);             //0           
 332   2          LCD_DrawPoint(x0-a,y0+b);             //1       
 333   2          LCD_DrawPoint(x0-b,y0-a);             //7           
 334   2          LCD_DrawPoint(x0-a,y0-b);             //2             
 335   2          LCD_DrawPoint(x0+b,y0+a);             //4               
 336   2          LCD_DrawPoint(x0+a,y0-b);             //5
 337   2          LCD_DrawPoint(x0+a,y0+b);             //6 
 338   2          LCD_DrawPoint(x0-b,y0+a);             
 339   2          a++;
 340   2          //使用Bresenham算法画圆     
 341   2          if(di<0)di +=4*a+6;   
 342   2          else
 343   2          {
 344   3            di+=10+4*(a-b);   
 345   3            b--;
 346   3          } 
 347   2          LCD_DrawPoint(x0+a,y0+b);
 348   2        }
 349   1      } 
 350          //在指定位置显示一个字符
 351          
 352          //num:要显示的字符:" "--->"~"
 353          //mode:叠加方式(1)还是非叠加方式(0)
 354          //在指定位置显示一个字符
 355          
 356          //num:要显示的字符:" "--->"~"
 357          
 358          //mode:叠加方式(1)还是非叠加方式(0)
 359          void LCD_ShowChar(u16 x,u16 y,u8 num,u8 mode)
 360          {
 361   1          u8 temp;
 362   1          u8 pos,t;
 363   1        u16 x0=x;
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 7   

 364   1        u16 colortemp=POINT_COLOR;      
 365   1          if(x>LCD_W-16||y>LCD_H-16)return;     
 366   1        //设置窗口       
 367   1        num=num-' ';//得到偏移后的值
 368   1        Address_set(x,y,x+8-1,y+16-1);      //设置光标位置 
 369   1        if(!mode) //非叠加方式
 370   1        {
 371   2          for(pos=0;pos<16;pos++)
 372   2          { 
 373   3            temp=asc2_1608[(u16)num*16+pos];     //调用1608字体
 374   3            for(t=0;t<8;t++)
 375   3              {                 
 376   4                  if(temp&0x01)POINT_COLOR=colortemp;
 377   4              else POINT_COLOR=BACK_COLOR;
 378   4              LCD_WR_DATA(POINT_COLOR); 
 379   4              temp>>=1; 
 380   4              x++;
 381   4              }
 382   3            x=x0;
 383   3            y++;
 384   3          } 
 385   2        }else//叠加方式
 386   1        {
 387   2          for(pos=0;pos<16;pos++)
 388   2          {
 389   3              temp=asc2_1608[(u16)num*16+pos];     //调用1608字体
 390   3            for(t=0;t<8;t++)
 391   3              {                 
 392   4                  if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
 393   4                  temp>>=1; 
 394   4              }
 395   3          }
 396   2        }
 397   1        POINT_COLOR=colortemp;                
 398   1      }   
 399          //m^n函数
 400          u32 mypow(u8 m,u8 n)
 401          {
 402   1        u32 result=1;  
 403   1        while(n--)result*=m;    
 404   1        return result;
 405   1      }      
 406          //显示2个数字
 407          //x,y :起点坐标  
 408          //len :数字的位数
 409          //color:颜色
 410          //num:数值(0~4294967295); 
 411          void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len)
 412          {           
 413   1        u8 t,temp;
 414   1        u8 enshow=0;
 415   1        num=(u16)num;
 416   1        for(t=0;t<len;t++)
 417   1        {
 418   2          temp=(num/mypow(10,len-t-1))%10;
 419   2          if(enshow==0&&t<(len-1))
 420   2          {
 421   3            if(temp==0)
 422   3            {
 423   4              LCD_ShowChar(x+8*t,y,' ',0);
 424   4              continue;
 425   4            }else enshow=1; 
C51 COMPILER V9.52.0.0   LCD                                                               03/02/2016 10:30:42 PAGE 8   

 426   3             
 427   3          }
 428   2          LCD_ShowChar(x+8*t,y,temp+48,0); 
 429   2        }
 430   1      } 
 431          //显示2个数字
 432          //x,y:起点坐标
 433          //num:数值(0~99);  
 434          void LCD_Show2Num(u16 x,u16 y,u16 num,u8 len)
 435          {           
 436   1        u8 t,temp;               
 437   1        for(t=0;t<len;t++)
 438   1        {
 439   2          temp=(num/mypow(10,len-t-1))%10;
 440   2          LCD_ShowChar(x+8*t,y,temp+'0',0); 
 441   2        }
 442   1      } 
 443          //显示字符串
 444          //x,y:起点坐标  
 445          //*p:字符串起始地址
 446          //用16字体
 447          void LCD_ShowString(u16 x,u16 y,const u8 *p)
 448          {         
 449   1          while(*p!='\0')
 450   1          {       
 451   2              if(x>LCD_W-16){x=0;y+=16;}
 452   2              if(y>LCD_H-16){y=x=0;LCD_Clear(RED);}
 453   2              LCD_ShowChar(x,y,*p,0);
 454   2              x+=8;
 455   2              p++;
 456   2          }  
 457   1      }
 458          
 459          
 460          
 461          
 462          
 463          
 464          
 465          
 466          
 467          
 468          
 469          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3421    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =      4     126
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
